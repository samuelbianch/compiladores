#Options
GenerateScanner = true
GenerateParser = true
Language = Java
ScannerName = Lexico
ParserName = Sintatico
SemanticName = Semantico
ScannerCaseSensitive = true
ScannerTable = Full
Input = Stream
Parser = LL
#RegularDefinitions
D: [0-9]
L: [aA-zZ]
WS: [\ \n\t]
E: [\ ]
#Tokens
: {WS}*
";"
"("
")"
"->"
">"
"<"
"=="
"{"
"}"
"'"
"'"
type: "int"
id: {L} ({L} | {D})*
aspas: \"
number: {D}+
atribute: "="
mult: "*"
div: "/"
plus: "+"
minus: "-"
read = id: "leia"
write = id: "escreva"
if = id: "se"
else = id: "senao"
while = id: "enquanto"

#NonTerminals
<PROGRAM>
<STMT_LIST>
<STMT>
<STRING>
<DECLARATION>
<GET>
<EXPRESSION>
<RELATIONAL_OPERATOR>
<MESSAGE>
<PLUS_MINUS>
<TERM>
<MULT_OPERATOR>
<IF_ELSE>
<IF>
<ELSE>
<FACTOR>
<TERM_TAIL>
<FACTOR_TAIL>
<COMP>
<WHILE>
#Grammar
<PROGRAM> ::= <STMT_LIST>;
<STMT_LIST> ::= <STMT> ";" <STMT_LIST> | î;
<STMT> ::= read "->" id;
<STMT> ::= write "->" aspas <MESSAGE> aspas;
<STMT> ::= <DECLARATION>;
<STMT> ::= <IF>;
<STMT> ::= <GET>;
<STMT> ::= <WHILE>;

<STRING> ::= id <STRING> | î; 
<MESSAGE> ::= aspas <STRING> aspas;


<DECLARATION> ::= type <GET>;
<GET> ::= id atribute <EXPRESSION>;


<IF_ELSE> ::= î | <ELSE>;
<IF> ::= if "(" <COMP> ")" "{" <STMT_LIST> "}" <IF_ELSE>;
<ELSE> ::= else "{" <STMT_LIST> "}";



<EXPRESSION> ::= <TERM> <TERM_TAIL>;
<TERM_TAIL> ::= <PLUS_MINUS> <TERM> <TERM_TAIL> | î;
<TERM> ::= <FACTOR> <FACTOR_TAIL>;
<FACTOR_TAIL> ::= <MULT_OPERATOR> <FACTOR> <FACTOR_TAIL>;
<FACTOR_TAIL> ::= î;
<FACTOR> ::= "(" <EXPRESSION> ")";
<FACTOR> ::= id;
<FACTOR> ::= number;
<RELATIONAL_OPERATOR> ::= ">" | "<" | "==";
<MULT_OPERATOR> ::= mult | div;
<PLUS_MINUS> ::= plus | minus;


<COMP> ::= <EXPRESSION> <RELATIONAL_OPERATOR> <EXPRESSION>;


<WHILE> ::= while "(" <COMP> ")" "{" <STMT_LIST> "}";
